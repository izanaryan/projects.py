import numpy as np
import pandas as pd
import matplotlib.pyplot as plt                                                    ## Libraries to be used

import os
print(os.getcwd())


titanic_data                                                                      ## Displayas data in the the file 

numeric_data = titanic_data.select_dtypes(include=['number'])                     ## converting datattype into float 


corr_matrix = numeric_data.corr()


sns.heatmap(numeric_data.corr(), cmap="YlGnBu", annot=True, fmt=".2f")
plt.show()


from sklearn.model_selection import StratifiedShuffleSplit

split = StratifiedShuffleSplit (n_splits=1, test_size=0.2)
for train_indices, test_indices in split.split(titanic_data, titanic_data[["Survived", "Pclass", "Sex"]]):  
    strat_train_set = titanic_data.loc[train_indices]
    strat_test_set = titanic_data.loc[test_indices]



plt.subplot(1,2,1)
strat_train_set['Survived'].hist()
strat_train_set['Pclass'].hist()

plt.subplot(1,2,2)
strat_train_set['Survived'].hist()
strat_train_set['Pclass'].hist()

plt.show()                                                                             ## Graph Plotting





strat_train_set.info()




from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.impute import SimpleImputer

class AgeImputer(BaseEstimator, TransformerMixin):
  def fit(self, X, y=None):
    return self
  def transform(self, X):
    imputer = SimpleImputer(strategy='mean')
    X['Age'] = imputer.fit_transform(X[['Age']])
    return X
